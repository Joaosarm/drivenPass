generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  cards       cards[]       @relation("cardsTousers")
  credentials Credentials[] @relation("credentialsTousers")
  notes       notes[]       @relation("notesTousers")
  wifis       wifis[]       @relation("usersTowifis")

  @@map("users")
}

model Credentials {
  id       Int    @id @default(autoincrement())
  title    String
  URL      String
  username String
  password String
  userId   Int
  users    Users  @relation("credentialsTousers", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("credentials")
}

model notes {
  id     Int    @id @default(autoincrement())
  title  String
  note   String
  userId Int
  users  Users  @relation("notesTousers", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model cards {
  id          Int        @id @default(autoincrement())
  title       String
  number      Int
  printedName String
  CVV         String
  expireDate  String
  password    String
  isVirtual   Boolean    @default(false)
  type        cardsTypes
  userId      Int
  users       Users      @relation("cardsTousers", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model wifis {
  id       Int    @id @default(autoincrement())
  title    String
  name     String
  password String
  userId   Int
  users    Users  @relation("usersTowifis", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum cardsTypes {
  credit
  debit
  both
}
